{"version":3,"sources":["../projects/ngx-google-analytics/src/lib/directives/ga-event-category.directive.ts","../../../node_modules/tslib/tslib.es6.js","../projects/ngx-google-analytics/src/lib/tokens/ngx-google-analytics-settings-token.ts","../projects/ngx-google-analytics/src/lib/tokens/ngx-window-token.ts","../projects/ngx-google-analytics/src/lib/tokens/ngx-data-layer-token.ts","../projects/ngx-google-analytics/src/lib/tokens/ngx-gtag-token.ts","../projects/ngx-google-analytics/src/lib/services/google-analytics.service.ts","../projects/ngx-google-analytics/src/lib/directives/ga-event.directive.ts","../projects/ngx-google-analytics/src/lib/directives/ga-event-form-input.directive.ts","../projects/ngx-google-analytics/src/lib/initializers/google-analytics.initializer.ts","../projects/ngx-google-analytics/src/lib/tokens/ngx-google-analytics-router-settings-token.ts","../projects/ngx-google-analytics/src/lib/initializers/google-analytics-router.initializer.ts","../../projects/ngx-google-analytics/src/lib/ngx-google-analytics.module.ts","../projects/ngx-google-analytics/src/lib/ngx-google-analytics-router/ngx-google-analytics-router.module.ts"],"names":["Directive","args","selector","exportAs","Input","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","__values","o","s","m","i","__read","r","ar","error","__spread","arguments","concat","NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN","InjectionToken","factory","trackingCode","enableTracing","getWindow","platformId","isPlatformBrowser","window","NGX_WINDOW","providedIn","inject","PLATFORM_ID","getDataLayerFn","NGX_DATA_LAYER","getGtagFn","dataLayer","NGX_GTAG_FN","GoogleAnalyticsService","settings","_document","_gtag","defineProperty","prototype","err","isDevMode","console","toKeyValue","map","size","Array","from","reduce","obj","_a","_b","key","enumerable","undefined","gtag","_i","filter","x","event","action","category","interaction","opt","Map","set","params","pageView","path","title","location","options","opt_1","document","href","entries","appView","screen","appName","appId","appVersion","installerId","exception","description","fatal","Injectable","Inject","DOCUMENT","GaEventDirective","gaCategoryDirective","gaService","gaBind","ngOnInit","onClick","trigger","onFocus","onBlur","gaAction","gaEvent","Error","gaCategory","gaLabel","gaValue","gaInteraction","warn","GaEventCategoryDirective","decorators","type","Optional","HostListener","GaEventFormInputDirective","bind","Host","NGX_GOOGLE_ANALYTICS_INITIALIZER_PROVIDER","provide","APP_INITIALIZER","multi","useFactory","GoogleAnalyticsInitializer","deps","_this","uri","initialCommands","command","values","Date","initCommands","createElement","async","src","nonce","setAttribute","getElementsByTagName","appendChild","NGX_GOOGLE_ANALYTICS_ROUTING_SETTINGS_TOKEN","NGX_GOOGLE_ANALYTICS_ROUTER_INITIALIZER_PROVIDER","APP_BOOTSTRAP_LISTENER","GoogleAnalyticsRouterInitializer","c","router","injector","get","Router","include","_c","exclude","includeRules","normalizePathRules","excludeRules","subs","events","pipe","NavigationEnd","skip","some","rule","test","urlAfterRedirects","subscribe","onDestroy","unsubscribe","rules","RegExp","replace","NgxGoogleAnalyticsModule","forRoot","commands","ngModule","providers","useValue","NgModule","imports","declarations","exports","NgxGoogleAnalyticsRouterModule","CommonModule"],"mappings":"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","sourcesContent":["import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: `[gaEvent][gaCategory],\n             [gaCategory]`,\n  exportAs: 'gaCategory'\n})\nexport class GaEventCategoryDirective {\n\n  constructor() { }\n\n  @Input() gaCategory: string;\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';\n\n/**\n * Provide a Injection Token to global settings.\n */\nexport const NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN = new InjectionToken<IGoogleAnalyticsSettings>('ngx-google-analytics-settings', {\n  factory: () => ({ trackingCode: '', enableTracing: false })\n});\n","import { InjectionToken, inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Check if this environment can access Window object and return window or null if false.\n */\nexport function getWindow(platformId: any) {\n  return (isPlatformBrowser(platformId))\n    ? window : null;\n}\n\n/**\n * Provide DOM Window reference or null if the environment is not a Browser.\n */\nexport const NGX_WINDOW = new InjectionToken<Window>('ngx-window', {\n  providedIn: 'root',\n  factory: () => getWindow(inject(PLATFORM_ID)),\n});\n","import { DataLayer } from '../types/data-layer.type';\nimport { InjectionToken, inject } from '@angular/core';\nimport { NGX_WINDOW } from './ngx-window-token';\n\n/**\n * Check if there is some global function called gtag on Window object, or create an empty function to doesn't brake codes...\n */\nexport function getDataLayerFn(window: Window): DataLayer {\n  return (window)\n    ? window['dataLayer'] = window['dataLayer'] || []\n    : null;\n}\n\n/**\n * Provides an injection token to access Google Analytics DataLayer Collection\n */\nexport const NGX_DATA_LAYER = new InjectionToken<DataLayer>('ngx-data-layer', {\n  providedIn: 'root',\n  factory: () => getDataLayerFn(inject(NGX_WINDOW))\n});\n","import { InjectionToken, inject } from '@angular/core';\nimport { NGX_WINDOW } from './ngx-window-token';\nimport { GtagFn } from '../types/gtag.type';\nimport { DataLayer } from '../types/data-layer.type';\nimport { NGX_DATA_LAYER } from './ngx-data-layer-token';\n\n/**\n * Check if there is some global function called gtag on Window object, or create an empty function to doesn't brake codes...\n */\nexport function getGtagFn(window: Window, dataLayer: DataLayer): GtagFn {\n  return (window)\n    ? window['gtag'] = window['gtag'] || function () {\n        dataLayer.push(arguments as any);\n      }\n    : null;\n}\n\n/**\n * Provides an injection token to access Google Analytics Gtag Function\n */\nexport const NGX_GTAG_FN = new InjectionToken<GtagFn>('ngx-gtag-fn', {\n  providedIn: 'root',\n  factory: () => getGtagFn(inject(NGX_WINDOW), inject(NGX_DATA_LAYER))\n});\n","import { Injectable, Inject, isDevMode } from '@angular/core';\nimport { NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN } from '../tokens/ngx-google-analytics-settings-token';\nimport { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';\nimport { GaActionEnum } from '../enums/ga-action.enum';\nimport { DOCUMENT } from '@angular/common';\nimport { NGX_GTAG_FN } from '../tokens/ngx-gtag-token';\nimport { GtagFn } from '../types/gtag.type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleAnalyticsService {\n\n  private get document(): Document {\n    return this._document;\n  }\n\n  constructor(\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) private readonly settings: IGoogleAnalyticsSettings,\n    @Inject(DOCUMENT) private readonly _document: any,\n    @Inject(NGX_GTAG_FN) private readonly _gtag: GtagFn\n  ) { }\n\n  private throw(err: Error) {\n    if ((this.settings.enableTracing || isDevMode()) && console && console.error) {\n      console.error(err);\n    }\n  }\n\n  /** @todo Change this to `Object.fromEntity()` in the future... */\n  private toKeyValue(map: Map<string, any>): { [param: string]: any } | void {\n    return (map.size > 0)\n      ? Array.from(map).reduce(\n        (obj, [key, value]) => Object.defineProperty(obj, key, { value, enumerable: true }),\n        {}\n      )\n      : undefined;\n  }\n\n  /**\n   * Call native GA Tag\n   */\n  gtag(...args: any[]) {\n    try {\n      this._gtag(...args.filter(x => x !== undefined));\n    } catch (err) {\n      this.throw(err);\n    }\n  }\n\n  /**\n   * Send an event trigger to GA. It is the same as call:\n   * ```js\n   * gtag('event', 'video_auto_play_start', {\n   *   'event_label': 'My promotional video',\n   *   'event_category': 'video_auto_play'\n   * });\n   * ```\n   *\n   * @param action 'video_auto_play_start'\n   * @param category 'video_auto_play'\n   * @param label 'My promotional video'\n   * @param value An value to measure something\n   */\n  event(action: GaActionEnum | string, category?: string, label?: string, value?: number, interaction?: boolean) {\n    try {\n      const opt = new Map<string, any>();\n      if (category) {\n        opt.set('event_category', category);\n      }\n      if (label) {\n        opt.set('event_label', label);\n      }\n      if (value) {\n        opt.set('value', value);\n      }\n      if (interaction !== undefined) {\n        opt.set('interaction', interaction);\n      }\n      const params = this.toKeyValue(opt);\n      if (params) {\n        this.gtag('event', action as string, params);\n      } else {\n        this.gtag('event', action as string);\n      }\n    } catch (error) {\n      this.throw(error);\n    }\n  }\n\n  /**\n   * Send an page view event. This is the same as\n   *\n   * ```js\n   * gtag('config', 'GA_TRACKING_ID', {\n   *   'page_title' : 'Homepage',\n   *   'page_path': '/home'\n   * });\n   * ```\n   *\n   * The tracking ID is injected automatically by Inject Token NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN\n   *\n   * @param path /home\n   * @param title Homepage\n   * @param location '{ page_location }'\n   * @param options '{ ... custom dimentions }'\n   */\n  pageView( path: string, title?: string, location?: string, options?: Object) {\n    try {\n      const opt = new Map<string, any>([['page_path', path]]);\n      if (title) {\n        opt.set('page_title', title);\n      }\n      if (location || this.document) {\n        opt.set('page_location', (location || this.document.location.href));\n      }\n      if (options) {\n        Object\n          .entries(options)\n          .map(([key, value]) => opt.set(key, value));\n      }\n      this.gtag('config', this.settings.trackingCode, this.toKeyValue(opt));\n    } catch (error) {\n      this.throw(error);\n    }\n  }\n\n  /**\n   * Send an event to report a App Page View. It is the same as\n   *\n   * ```js\n   * gtag('event', 'screen_view', {\n   *   'app_name': 'myAppName',\n   *   'screen_name' : 'Home'\n   * });\n   *\n   * ```\n   *\n   * @param screen 'screen_name'\n   * @param appName 'app_name'\n   * @param appId 'app_id'\n   * @param appVersion 'app_version'\n   * @param installerId 'app_installer_id'\n   */\n  appView(screen: string, appName: string, appId?: string, appVersion?: string, installerId?: string) {\n    try {\n      const opt = new Map<string, any>([['screen_name', screen], ['app_name', appName]]);\n      if (appId) {\n        opt.set('app_id', appId);\n      }\n      if (appVersion) {\n        opt.set('app_version', appVersion);\n      }\n      if (installerId) {\n        opt.set('app_installer_id', installerId);\n      }\n      this.gtag('event', 'screen_view', this.toKeyValue(opt));\n    } catch (error) {\n      this.throw(error);\n    }\n  }\n\n  /**\n   * Defines persistent values on GoogleAnalytics\n   *\n   * @see https://developers.google.com/analytics/devguides/collection/gtagjs/setting-values\n   *\n   * ```js\n   * gtag('set', {\n   *   'currency': 'USD',\n   *   'country': 'US'\n   * });\n   * ```\n   */\n  set(...options: Array<any>) {\n    try {\n      this._gtag('set', ...options);\n    } catch (err) {\n      this.throw(err);\n    }\n  }\n\n  /**\n   * Send an event to GA to report an application error. It is the same as\n   *\n   * ```js\n   * gtag('event', 'exception', {\n   *   'description': 'error_description',\n   *   'fatal': false   // set to true if the error is fatal\n   * });\n   * ```\n   *\n   * @param description 'error_description'\n   * @param fatal set to true if the error is fatal\n   */\n  exception(description?: string, fatal?: boolean) {\n    try {\n      const opt = new Map<string, any>();\n      if (description) {\n        opt.set('description', description);\n      }\n      if (fatal) {\n        opt.set('fatal', fatal);\n      }\n      const params = this.toKeyValue(opt);\n      if (params) {\n        this.gtag('event', 'exception', this.toKeyValue(opt));\n      } else {\n        this.gtag('event', 'exception');\n      }\n    } catch (error) {\n      this.throw(error);\n    }\n  }\n}\n","import { Directive, Optional, Input, HostListener, OnInit, isDevMode, Inject } from '@angular/core';\nimport { GaEventCategoryDirective } from './ga-event-category.directive';\nimport { GoogleAnalyticsService } from '../services/google-analytics.service';\nimport { GaBind } from '../types/ga-bind.type';\nimport { GaActionEnum } from '../enums/ga-action.enum';\nimport { NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN } from '../tokens/ngx-google-analytics-settings-token';\nimport { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';\n\n@Directive({\n  selector: `[gaEvent]`,\n  exportAs: 'gaEvent'\n})\nexport class GaEventDirective implements OnInit {\n\n  constructor(\n    @Optional() private gaCategoryDirective: GaEventCategoryDirective,\n    private gaService: GoogleAnalyticsService,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) private settings: IGoogleAnalyticsSettings\n  ) {\n  }\n\n  @Input() gaAction: GaActionEnum | string;\n  @Input() gaLabel: string;\n  @Input() label: string;\n  @Input() gaValue: number;\n  @Input() gaInteraction: boolean;\n  @Input() gaBind: GaBind = 'click';\n  @Input() gaEvent: GaActionEnum | string;\n\n  ngOnInit() {\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.gaBind === 'click') {\n      this.trigger();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this.gaBind === 'focus') {\n      this.trigger();\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.gaBind === 'blur') {\n      this.trigger();\n    }\n  }\n\n  protected trigger() {\n    try {\n      // ObservaÃ§Ã£o: nÃ£o Ã© obrigatÃ³rio especificar uma categoria, uma etiqueta ou um valor. Consulte Eventos padrÃ£o do Google Analytics abaixo.\n      // if (!this.$gaCategoryDirective) {\n      //   throw new Error('You must provide a gaCategory attribute w/ gaEvent Directive.');\n      // }\n\n      if (!this.gaAction && !this.gaEvent) {\n        throw new Error('You must provide a gaAction attribute to identify this event.');\n      }\n\n      this.gaService\n          .event(\n            this.gaAction || this.gaEvent,\n            (this.gaCategoryDirective) ? this.gaCategoryDirective.gaCategory : undefined,\n            this.gaLabel || this.label,\n            this.gaValue,\n            this.gaInteraction\n          );\n    } catch (err) {\n      this.throw(err);\n    }\n  }\n\n  protected throw(err: Error) {\n    if ((isDevMode() || this.settings.enableTracing) && console && console.warn) {\n      console.warn(err);\n    }\n  }\n\n}\n","import { Directive, Host, Optional, Input } from '@angular/core';\nimport { GaEventDirective } from './ga-event.directive';\nimport { GaBind } from '../types/ga-bind.type';\n\n@Directive({\n  selector: `input[gaEvent],\n             select[gaEvent],\n             textarea[gaEvent]`\n})\nexport class GaEventFormInputDirective {\n\n  constructor(\n    @Host() @Optional() protected gaEvent: GaEventDirective\n  ) {\n    this.gaBind = 'focus';\n  }\n\n  @Input() set gaBind(bind: GaBind) {\n    if (this.gaEvent) {\n      this.gaEvent.gaBind = bind;\n    }\n  }\n\n}\n","import { Provider, APP_INITIALIZER, isDevMode } from '@angular/core';\nimport { NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN } from '../tokens/ngx-google-analytics-settings-token';\nimport { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';\nimport { IGoogleAnalyticsCommand } from '../interfaces/i-google-analytics-command';\nimport { NGX_GTAG_FN } from '../tokens/ngx-gtag-token';\nimport { GtagFn } from '../types/gtag.type';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Provide a DI Configuration to attach GA Initialization at Angular Startup Cycle.\n */\nexport const NGX_GOOGLE_ANALYTICS_INITIALIZER_PROVIDER: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: GoogleAnalyticsInitializer,\n  deps: [\n    NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN,\n    NGX_GTAG_FN,\n    DOCUMENT\n  ]\n};\n\n/**\n * Create a script element on DOM and link it to Google Analytics tracking code URI.\n * After that, execute exactly same init process as tracking snippet code.\n */\nexport function GoogleAnalyticsInitializer(\n  settings: IGoogleAnalyticsSettings,\n  gtag: GtagFn,\n  document: Document\n) {\n  return async () => {\n    if (!settings.trackingCode) {\n      if (!isDevMode()) {\n        console.error('Empty tracking code for Google Analytics. Make sure to provide one when initializing NgxGoogleAnalyticsModule.');\n      }\n\n      return;\n    }\n\n    if (!gtag) {\n      if (!isDevMode()) {\n        console.error('Was not possible create or read gtag() fn. Make sure this module is running on a Browser w/ access to Window interface.');\n      }\n\n      return;\n    }\n\n    if (!document) {\n      if (!isDevMode()) {\n        console.error('Was not possible to access Document interface. Make sure this module is running on a Browser w/ access do Document interface.');\n      }\n    }\n\n    // Set default ga.js uri\n    settings.uri = settings.uri || `https://www.googletagmanager.com/gtag/js?id=${settings.trackingCode}`;\n\n    // these commands should run first!\n    const initialCommands: Array<IGoogleAnalyticsCommand> = [\n      { command: 'js', values: [ new Date() ] },\n      { command: 'config', values: [ settings.trackingCode ] }\n    ];\n\n    settings.initCommands = [ ...initialCommands, ...(settings.initCommands || []) ];\n\n    for (const command of settings.initCommands) {\n      gtag(command.command, ...command.values);\n    }\n\n    const s: HTMLScriptElement = document.createElement('script');\n    s.async = true;\n    s.src = settings.uri;\n\n    if (settings.nonce) {\n      s.setAttribute('nonce', settings.nonce);\n    }\n\n    const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n    head.appendChild(s);\n  };\n}\n","import { InjectionToken } from '@angular/core';\nimport { IGoogleAnalyticsRoutingSettings } from '../interfaces/i-google-analytics-routing-settings';\n\n/**\n * Provide a Injection Token to global settings.\n */\nexport const NGX_GOOGLE_ANALYTICS_ROUTING_SETTINGS_TOKEN = new InjectionToken<IGoogleAnalyticsRoutingSettings>('ngx-google-analytics-routing-settings', {\n  factory: () => ({})\n});\n","import { Provider, APP_BOOTSTRAP_LISTENER, ComponentRef } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { IGoogleAnalyticsRoutingSettings } from '../interfaces/i-google-analytics-routing-settings';\nimport { GoogleAnalyticsService } from '../services/google-analytics.service';\nimport { NGX_GOOGLE_ANALYTICS_ROUTING_SETTINGS_TOKEN } from '../tokens/ngx-google-analytics-router-settings-token';\nimport { filter, skip } from 'rxjs/operators';\n\n/**\n * Provide a DI Configuration to attach GA Trigger to Router Events at Angular Startup Cycle.\n */\nexport const NGX_GOOGLE_ANALYTICS_ROUTER_INITIALIZER_PROVIDER: Provider = {\n  provide: APP_BOOTSTRAP_LISTENER,\n  multi: true,\n  useFactory: GoogleAnalyticsRouterInitializer,\n  deps: [\n    NGX_GOOGLE_ANALYTICS_ROUTING_SETTINGS_TOKEN,\n    GoogleAnalyticsService\n  ]\n};\n\n/**\n * Attach a listener to `NavigationEnd` Router event. So, every time Router finish the page resolution it should call `NavigationEnd` event.\n * We assume that NavigationEnd is the final page resolution and call GA `page_view` command.\n *\n * To avoid double binds, we also destroy the subscription when de Bootstrap Component is destroied. But, we don't know for sure\n * that this strategy does not cause double bind on multiple bootstrap components.\n *\n * We are using de component's injector reference to resolve Router, sou I hope there is no problem w/ double bing.\n *\n * If you have this problem, I encourage not Use NgxGoogleAnalyticsRouterModule and atach the listener on AppComponent initialization.\n */\nexport function GoogleAnalyticsRouterInitializer(\n  settings: IGoogleAnalyticsRoutingSettings,\n  gaService: GoogleAnalyticsService\n) {\n  return async (c: ComponentRef<any>) => {\n    const router = c.injector.get(Router);\n    const { include = [], exclude = [] } = settings ?? {};\n    const includeRules = normalizePathRules(include);\n    const excludeRules = normalizePathRules(exclude);\n    const subs = router\n      .events\n      .pipe(\n        filter((event: NavigationEnd) => event instanceof NavigationEnd),\n        skip(1), // Prevend double views on the first tigger (because GA Already send one ping on setup)\n        filter(event => includeRules.length > 0\n          ? includeRules.some(rule => rule.test(event.urlAfterRedirects))\n          : true),\n        filter(event => excludeRules.length > 0\n          ? !excludeRules.some(rule => rule.test(event.urlAfterRedirects))\n          : true)\n      )\n      .subscribe(event => gaService.pageView(event.urlAfterRedirects, undefined));\n    // Cleanup\n    c.onDestroy(() => subs.unsubscribe());\n  };\n}\n\n/** Converts all path rules from string to Regex instances */\nfunction normalizePathRules(rules: Array<string | RegExp>): Array<RegExp> {\n  return rules.map(rule => (rule instanceof RegExp)\n    ? rule\n    : new RegExp(`^${rule.replace('*', '.*')}$`, 'i'));\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { IGoogleAnalyticsCommand } from './interfaces/i-google-analytics-command';\nimport { NGX_GOOGLE_ANALYTICS_INITIALIZER_PROVIDER } from './initializers/google-analytics.initializer';\nimport { NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN } from './tokens/ngx-google-analytics-settings-token';\nimport { GaEventDirective } from './directives/ga-event.directive';\nimport { GaEventCategoryDirective } from './directives/ga-event-category.directive';\nimport { GaEventFormInputDirective } from './directives/ga-event-form-input.directive';\nimport { IGoogleAnalyticsSettings } from './interfaces/i-google-analytics-settings';\n\n/**\n * Install Google Analytics Tracking code on your environment and configure tracking ID.\n *\n * This module should be a dependency on the highest level module of the application, i.e. AppModule in most use cases.\n */\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    GaEventDirective,\n    GaEventCategoryDirective,\n    GaEventFormInputDirective\n  ],\n  exports: [\n    GaEventDirective,\n    GaEventCategoryDirective,\n    GaEventFormInputDirective\n  ]\n})\nexport class NgxGoogleAnalyticsModule {\n  /**\n   * You should provide a valid Google TrackingCode. This code will be provided to the entire application by\n   * `NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN` token. You can inject this code in you components if you like by\n   * use the following injection code `@Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) gaConfig: IGoogleAnalyticsSettings`\n   *\n   * @param trackingCode The Google Tracking Code\n   * @param commands When placed, it will run any GA Commands in sequence after setup GA environment.\n   * @param uri When placed, it will change the default js URI to the provided one.\n   * @param enableTracing When true, trace GA tracking errors on production mode.\n   * @param nonce When placed, nonce will be added to script tag.\n   */\n  static forRoot(trackingCode: string, commands: IGoogleAnalyticsCommand[] = [], uri?: string, enableTracing?: boolean, nonce?: string): ModuleWithProviders<NgxGoogleAnalyticsModule> {\n    return {\n      ngModule: NgxGoogleAnalyticsModule,\n      providers: [\n        {\n          provide: NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN,\n          useValue: {\n            trackingCode,\n            commands,\n            uri,\n            enableTracing,\n            nonce\n          } as IGoogleAnalyticsSettings\n        },\n        NGX_GOOGLE_ANALYTICS_INITIALIZER_PROVIDER,\n      ]\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NGX_GOOGLE_ANALYTICS_ROUTER_INITIALIZER_PROVIDER } from '../initializers/google-analytics-router.initializer';\nimport { NgxGoogleAnalyticsModule } from '../ngx-google-analytics.module';\nimport { IGoogleAnalyticsRoutingSettings } from '../interfaces/i-google-analytics-routing-settings';\nimport { NGX_GOOGLE_ANALYTICS_ROUTING_SETTINGS_TOKEN } from '../tokens/ngx-google-analytics-router-settings-token';\n\n/**\n * Attach a listener to `NavigationEnd` Router event. So, every time Router finish the page resolution it should call `NavigationEnd` event.\n * We assume that NavigationEnd is the final page resolution and call GA `page_view` command.\n *\n * To avoid double binds, we also destroy the subscription when de Bootstrap Component is destroied. But, we don't know for sure\n * that this strategy does not cause double bind on multiple bootstrap components.\n *\n * We are using de component's injector reference to resolve Router, sou I hope there is no problem w/ double bing.\n *\n * If you have this problem, I encourage not Use NgxGoogleAnalyticsRouterModule and atach the listener on AppComponent initialization.\n *\n * This Module is just a sugar for:\n *\n```typescript\nconstructor(private router: Router) {}\n...\nngOnInit() {\n  ...\n  this.router\n    .events\n    .pipe(takeUntil(this.onDestroy$))\n    .subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        gaService.pageView(event.urlAfterRedirects, undefined);\n      }\n    });\n```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    NGX_GOOGLE_ANALYTICS_ROUTER_INITIALIZER_PROVIDER\n  ],\n  declarations: []\n})\nexport class NgxGoogleAnalyticsRouterModule {\n  static forRoot(settings?: IGoogleAnalyticsRoutingSettings): ModuleWithProviders<NgxGoogleAnalyticsRouterModule> {\n    return {\n      ngModule: NgxGoogleAnalyticsRouterModule,\n      providers: [\n        {\n          provide: NGX_GOOGLE_ANALYTICS_ROUTING_SETTINGS_TOKEN,\n          useValue: settings ?? {}\n        }\n      ]\n    };\n  }\n}\n"]}