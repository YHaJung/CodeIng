# Generated by Django 3.1.1 on 2020-09-18 15:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('lecture', '0004_delete_lecturesubcategory'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cons',
            fields=[
                ('considx', models.AutoField(db_column='consIdx', primary_key=True, serialize=False)),
                ('constype', models.CharField(db_column='consType', max_length=45)),
            ],
            options={
                'db_table': 'cons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pros',
            fields=[
                ('prosidx', models.AutoField(db_column='prosIdx', primary_key=True, serialize=False)),
                ('prostype', models.CharField(db_column='prosType', max_length=45)),
            ],
            options={
                'db_table': 'pros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('reviewidx', models.AutoField(db_column='reviewIdx', primary_key=True, serialize=False)),
                ('lectureidx', models.IntegerField(db_column='lectureIdx')),
                ('totalrating', models.DecimalField(db_column='totalRating', decimal_places=1, max_digits=2)),
                ('pricerating', models.DecimalField(db_column='priceRating', decimal_places=1, max_digits=2)),
                ('teachingpowerrating', models.DecimalField(db_column='teachingPowerRating', decimal_places=1, max_digits=2)),
                ('recommend', models.CharField(max_length=1)),
                ('isblocked', models.CharField(db_column='isBlocked', max_length=1)),
                ('improvement', models.TextField(blank=True, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('isdeleted', models.CharField(db_column='isDeleted', max_length=1)),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviewcons',
            fields=[
                ('reviewconsidx', models.AutoField(db_column='reviewConsIdx', primary_key=True, serialize=False)),
                ('reviewidx', models.IntegerField(db_column='reviewIdx')),
                ('considx', models.IntegerField(db_column='consIdx')),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('isdeleted', models.CharField(db_column='isDeleted', max_length=1)),
            ],
            options={
                'db_table': 'reviewCons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviewpros',
            fields=[
                ('reviewprosidx', models.AutoField(db_column='reviewProsIdx', primary_key=True, serialize=False)),
                ('reviewidx', models.IntegerField(db_column='reviewIdx')),
                ('prosidx', models.IntegerField(db_column='prosIdx')),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('isdeleted', models.CharField(db_column='isDeleted', max_length=1)),
            ],
            options={
                'db_table': 'reviewPros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('useridx', models.AutoField(db_column='userIdx', primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='userId', max_length=45)),
                ('userpwd', models.CharField(db_column='userPwd', max_length=45)),
                ('gender', models.CharField(max_length=1)),
                ('name', models.CharField(max_length=45)),
                ('birthday', models.DateField()),
                ('email', models.CharField(max_length=255)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=20)),
                ('school', models.CharField(blank=True, max_length=30, null=True)),
                ('job', models.CharField(blank=True, max_length=1, null=True)),
                ('major', models.CharField(blank=True, max_length=1, null=True)),
                ('isblocked', models.CharField(db_column='isBlocked', max_length=1)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('isdeleted', models.CharField(db_column='isDeleted', max_length=1)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('category', models.IntegerField()),
                ('subcategory', models.IntegerField(db_column='subCategory')),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('profileimg', models.CharField(blank=True, db_column='profileImg', max_length=45, null=True)),
                ('nickname', models.CharField(db_column='nickName', max_length=45)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('isdeleted', models.CharField(db_column='isDeleted', max_length=1)),
                ('useridx', models.AutoField(db_column='userIdx', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'userInfo',
                'managed': False,
            },
        ),
    ]
